% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rangeCleaner.R
\name{rangeCleaner}
\alias{rangeCleaner}
\title{Functions to filter species occurrences or select species based on a system of geographical units developped by The International Working Group on Taxonomic Databases for Plant Sciences (TDWG) at approximately "country" level and upwards.}
\usage{
rangeCleaner(point_data, what = "species", working_dir = NULL,
  species_name = NULL, species_id = NULL, status = "both",
  initial_level = 2, force.output = FALSE, sp = FALSE,
  fileAsNames = FALSE, do.parallel = FALSE, ncores = NULL,
  save.outputs = TRUE, verbose = TRUE, ...)
}
\arguments{
\item{point_data}{A two-column data.frame of occurrence records coordinates, a path to a directory or a file containing the occurrence records coordinates of the species.}

\item{what}{A character string specifying whether the filtering must be applied on species or their occurrences. Can be either \code{'species'} or \code{'occurrences'}}

\item{working_dir}{A character string specifying the path to the output directory.}

\item{species_name}{A two character string (Genus species) specifying the name of the species to check. Ignored if point_data is a directory or if \code{fileAsNames=TRUE}.}

\item{species_id}{A character string specifying the id of the species in ipni or Kew world checklist database.}

\item{status}{A character string specifying the geographic range where to search for the species. Can be : 'native', 'introduced' or 'both'}

\item{initial_level}{A numeric integer between 1 and 4. The initial unit level of the TWDG at which the data must be checked against. Default initial level is 2.}

\item{force.output}{A logical. Should the initial point dataset be returned in case where all points have been removed by the cleaning ? Default is FALSE.}

\item{sp}{A logical. Should the results be returned as a SpatialPointsDataFrame ? Default is FALSE. Ignored if \code{cleanOcc=FALSE}}

\item{fileAsNames}{A logical. Should species name be retrieved from file names ? Default is FALSE. Ignored if point_data is a path to a directory.}

\item{do.parallel}{A logical. Should computations be run in parallel. Default is FALSE.}

\item{ncores}{A numeric integer specifying the number of cores to use in parallel processing. Ignored if \code{do.parallel=FALSE}.}

\item{save.outputs}{A logical. Should the results be saved on the disk. Default is TRUE. The results wil be saved in the directory given in \code{working_dir} argument.
Ignored if \code{what='species'}.}

\item{...}{Additional parameters.
If \code{what='occurrences'} ...is ignored.
If \code{what='species'}, ... should include parameters for \code{speciesRangeCleaner()}, such as:
the point_fraction which is the minimum fraction of occurrence records that must be included within the geographic range defined in \code{status};
the unit_fraction which is the minimum fraction of geographical units that must include occurrence records;
the range_filling which is the minimum percent of the geographic area covered by the occurrence records distribution;
or the grid_resol which specifies the resolution of the raster grid to be used when calculating the percentage of geographic range covered by occurrence records.
Or other additional parameters to be passed to \code{TDWGinfo()}
See \code{TDWGinfo()} documentation or examples below for more details.}

\item{by_id}{A logical. Should the criteria be applied to each geographical units ? Default is FALSE. Ignored if \code{what='occurrences'}}

\item{recursive}{A logical. Should the criteria be also applied at the subsequent lower units level ? Default is FALSE. Ignored if \code{what='occurrences'}}
}
\value{
If \code{what='species'}, the function returns a \code{TRUE} if the distribution of species occurrences follows the range specified in \code{status}, and the given criteria. \code{FALSE} otherwise.
        If \code{what='occurrences'}, the function returns a list whose elements are the species occurrence records cleaned by the range specified in \code{status}.
}
\description{
Filter or select species occurrences or species not occurring within a given range.
}
\examples{
wk_dir = <path to a csv species files directory >
		out = rangeCleaner(point_data=wk_dir,
			working_dir=wk_dir,
			what='occurrences',
			status='native',
			do.parallel=FALSE)
}
\seealso{
\code{TDWGinfo()}, \code{speciesRangeCleaner()}
}
\author{
<i.ondo@kew.org>
}
